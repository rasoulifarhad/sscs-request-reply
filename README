### Run 
#
## 1. Run Kafka
#
#     Go to `docker` folder then run `docker compose up -d` 
#
## 2. Run app(	web)
#
#     Go to  `sscs-request-reply` folder and run `./mvnw spring-boot:run`
#
## 3. Test with curl - (uppercase value in body of request)  
#
#     curl -s -X POST -H 'Content-Type: text/plain' -d 'test' -w "\n"  http://localhost:8080/api/uppercase
#
#     OR
#
#     curl --header "Content-Type: text/plain" \
#          --request POST \
#          --data 'test' \
#          -w "\n" \
#           http://localhost:8080/api/uppercase
#
## 4. Test with curl - (uppercase value in path of request)  
#
#     curl -s -X POST -H 'Content-Type: text/plain' -w "\n"  http://localhost:8080/api/uppercase/test
#
#     OR
#
#     curl --header "Content-Type: text/plain" \
#          --request POST \
#          -w "\n" \
#           http://localhost:8080/api/uppercase/test
#
#
#   *************************************************
#   *                     DOCs                      *
#   ************************************************* 
#                          
#           /api/sendToKafka                call apply       (Function)                  (Gateeay)            
#    client ---------------->  web handler -----------> sendAndReceiveService ------> requestReplyGateway (Outbound Gateway)---------> 
#
#                                                                
#                                                                             
#            
#        ┌─────────────┐                                                                                  ┌────────────┐  
#        │  Publisher  │                                                                                  │  Consumer  │
#        │  (Client)   │              ***********************************************                     │  (Client)  │
#        └─────────────┘              *                   RabbitMQ                  *                     └────────────┘
#                                     *                                             *
#                                     *                                             *
#                                     *  ┌─────────────┐                            *       
#                                     *  │             │ Binding    ____________    *      |
#                                     *  │             │---------> ()___________()---------┘
#                                     *  │             │                            * 
#        ┌─────────────┐              *  │             │                            *                     ┌────────────┐
#        │  Publisher  │              *  │             │ Binding    ____________    *                     │  Consumer  │
#        │  (Client)   │              *  │  Exchange   │---------> ()___________()  *                     │  (Client)  │
#        └─────────────┘              *  │             │                            *                     └────────────┘
#                                     *  │             │                            *
#                                     *  │             │                            *
#                                     *  │             │ Binding    ____________    * 
#                                     *  │             │---------> ()___________()  *
#                                     *  │             │                            *
#                                     *  └─────────────┘                            *
#        ┌─────────────┐              *                                             *                     ┌────────────┐ 
#        │  Publisher  │              ***********************************************                     │  Consumer  │
#        │  (Client)   │                                                                                  │  (Client)  │
#        └─────────────┘                                                                                  └────────────┘
#
## Tips:
#   
#  How to convert Mono<List<String>> into Flux<String>     
#   
#      myMono.flatMapMany(Flux::fromIterable)
#      Flux.from(myMono)
#
#  Convert Flux to Mono
#
#   myFlux.next()
	
